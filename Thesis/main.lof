\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax 
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.1}{\ignorespaces Zooming in on a Raster Graphics Image}}{5}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.2}{\ignorespaces Creating a Raster Image in Sketchbook}}{6}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.3}{\ignorespaces Zooming in on a Vector Graphics Image}}{7}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.4}{\ignorespaces An example of the infinite canvas in Mischief}}{9}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.5}{\ignorespaces Using Natural Sketch to Add Detailing to a Car.}}{11}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Details are added to a base model.}}}{11}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {A rough sketch can be traced with editable spline curves.}}}{11}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.6}{\ignorespaces Using Hyve3D to draw in a virtual environment}}{13}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {A user using an iPad to sketch on a plane inside of the virtual environment.}}}{13}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Manipulating the drawing plane by manipulating the iPad}}}{13}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.7}{\ignorespaces Augmented Reality Sketching using Gravity}}{14}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.8}{\ignorespaces Virtual Reality Sketching using Tilt Brush}}{15}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {2.9}{\ignorespaces 3D-Drawing using a 3-D Printing Pen}}{16}
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {3.1}{\ignorespaces A diagram of a resistive touch sensor}}{26}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {3.2}{\ignorespaces A diagram of a surface acoustic wave sensor}}{27}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {3.3}{\ignorespaces A diagram of a surface capacitive sensor}}{30}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {3.4}{\ignorespaces A diagram a projected capacitive sensor}}{32}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {3.5}{\ignorespaces The core set of gestures}}{36}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {3.6}{\ignorespaces Examples of pen gestures}}{39}
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {4.1}{\ignorespaces An input stroke (a) is provided to the application as (b) a sequence of point samples.}}{42}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {4.2}{\ignorespaces Sketch intent versus sketch input}}{43}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {The intended complicated stroke input onto a sensing grid.}}}{43}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {A potential raw input detected by the sensor.}}}{43}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {4.3}{\ignorespaces Errors in spline generation from how strokes are sampled}}{46}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {}}}{46}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {}}}{46}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {}}}{46}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {4.4}{\ignorespaces An artifact in spline generation caused by oddly spaced sample points}}{46}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {4.5}{\ignorespaces Creating the subdivided polyline from the control points}}{48}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {}}}{48}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {}}}{48}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {}}}{48}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(d)}{\ignorespaces {}}}{48}
\defcounter {refsection}{0}\relax 
\contentsline {subfigure}{\numberline {(e)}{\ignorespaces {}}}{48}
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {5.1}{\ignorespaces Ray Tracing in Computer Graphics}}{52}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {5.2}{\ignorespaces Rough Diagram of Projecting Stroke onto Drawing Surface}}{52}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {5.3}{\ignorespaces The ray from the eye $\mathbf {e}$ to a point on the screen $s$}}{54}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {5.4}{\ignorespaces An example of a ray checking and failing for intersection with a box}}{59}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {5.5}{\ignorespaces A comparison between the bounding volumes of a node using a naive implementation (left) and a surface area heuristic (right).}}{61}
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.1}{\ignorespaces Two line segments connected together, as per default GL\_LINES implementation. Note the gap from no join.}}{63}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.2}{\ignorespaces An example of the flaws of native line rendering in OpenGL using GL\_LINES.}}{64}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.3}{\ignorespaces Diagram of a miter join with parameter labels}}{65}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.4}{\ignorespaces Diagram of a bevel join with parameter labels}}{66}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.5}{\ignorespaces Left: An example of a miter join artifact from a sharp curve. Right: Artifact post-correction.}}{66}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.6}{\ignorespaces Left: A curve using default GL\_LINES. Right: Implemented system}}{67}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.7}{\ignorespaces The line adjacency data structure. Each instance of the geometry shader polygonalizes the line segment (p1, p2)}}{68}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.8}{\ignorespaces Example polygonization of a line with miter joins.}}{69}
\defcounter {refsection}{0}\relax 
\contentsline {figure}{\numberline {6.9}{\ignorespaces Even when rotating the drawing plane such that it is no longer visible, our lines remain visible.}}{70}
\defcounter {refsection}{0}\relax 
\addvspace {10\p@ }
