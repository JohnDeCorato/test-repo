\relax 
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Line Rendering}{1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces An example of native line rendering in OpenGL using GL\_LINES. Notice the poor anti-aliasing and holes from no joins.\relax }}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Creating Geometry From the Line Definition}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces Diagram for creating the line geometry\relax }}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.3}{\ignorespaces The gap that forms when connecting segments\relax }}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.4}{\ignorespaces Types of joins from left to right: round, bevel, miter\relax }}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.5}{\ignorespaces An example of a miter join artifact from a sharp curve\relax }}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Implementation}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.6}{\ignorespaces Polygonization of a line with miter joins using only two vertices per control point\relax }}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.7}{\ignorespaces A standard triangle strip. Note how the definition matches our polygonalization\relax }}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Various Pen Types}{8}}
